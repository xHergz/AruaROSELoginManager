<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="_moveUpArrow.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QmCC
</value>
  </data>
  <data name="_moveDownArrow.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="_deleteButton.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>